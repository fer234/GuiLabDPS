{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/alumnos/alumno-list/alumno-list.component.ts","webpack:///src/app/components/alumnos/alumno-list/alumno-list.component.html","webpack:///src/app/components/alumnos/alumno/alumno.component.ts","webpack:///src/app/components/alumnos/alumno/alumno.component.html","webpack:///src/app/components/alumnos/alumnos.component.ts","webpack:///src/app/components/alumnos/alumnos.component.html","webpack:///src/app/models/alumno.ts","webpack:///src/app/services/alumno.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","forRoot","declarations","imports","providers","bootstrap","AlumnoListComponent","alumnoService","toastr","getAlumnos","snapshotChanges","subscribe","item","alumnoList","forEach","element","x","payload","toJSON","key","push","alumno","selectedAlumno","Object","assign","$key","confirm","deleteAlumno","warning","AlumnoComponent","resetForm","alumnoForm","value","insertAlumno","updateAlumno","success","reset","onSubmit","AlumnosComponent","Alumno","AlumnoService","list","name","lastname","age","direccion","telefono","correo_electronico","update","remove","providedIn","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y;;;;;uBAAAA,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,soB;AAAA;AAAA;ACNzB;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAA6C;;AAAa;;AAAsB;;AAAS;;AAAO;;AAChG;;AACA;;AACA;;AACA;;;;;;;;;sEDLaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,qE,CAQA;AAIA;AACA;AAEA;AAEA;;;QAyBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBALT,CACT,uEADS,C;AAEV,gBAVQ,CACP,uEADO,EAEP,0DAFO,EAGP,gEAAkBC,aAAlB,CAAgC,sEAAYC,QAA5C,CAHO,EAIP,gFAJO,EAKP,yDAAaC,OAAb,EALO,EAMP,6FANO,CAUR;;;;0HAGUH,S,EAAS;AAAA,uBAlBlB,2DAkBkB,EAjBlB,sFAiBkB,EAhBlB,yGAgBkB,EAflB,2FAekB;AAfH,kBAGf,uEAHe,EAIf,0DAJe,EAIJ,+DAJI,EAMf,gFANe,EAMU,wDANV,EAQf,6FARe;AAeG,O;AAPK,K;;;;;sEAOdA,S,EAAS;cApBrB,sDAoBqB;eApBZ;AACRI,sBAAY,EAAE,CACZ,2DADY,EAEZ,sFAFY,EAGZ,yGAHY,EAIZ,2FAJY,CADN;AAORC,iBAAO,EAAE,CACP,uEADO,EAEP,0DAFO,EAGP,gEAAkBJ,aAAlB,CAAgC,sEAAYC,QAA5C,CAHO,EAIP,gFAJO,EAKP,yDAAaC,OAAb,EALO,EAMP,6FANO,CAPD;AAeRG,mBAAS,EAAE,CACT,uEADS,CAfH;AAkBRC,mBAAS,EAAE,CAAC,2DAAD;AAlBH,S;AAoBY,Q;;;;;;;;;;;;;;;;;;AC1CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACQgB;;AACI;;AAAI;;AAAe;;AACnB;;AAAI;;AAAe;;AACnB;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAc;;AAClB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAmB;;AACvB;;AAAI;;AAA6B;;AACjC;;AACI;;AAAwC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpC;;AACJ;;AACA;;AAAqC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACjC;;AACJ;;AACJ;;AACJ;;;;;;AAfQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;QDCXC,mB;;;AAIX,mCACUC,aADV,EAEUC,MAFV,EAE+B;AAAA;;AADrB,aAAAD,aAAA,GAAAA,aAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACL;;;;mCAEM;AAAA;;AACT,iBAAO,KAAKD,aAAL,CAAmBE,UAAnB,GACJC,eADI,GACcC,SADd,CACwB,UAAAC,IAAI,EAAI;AACnC,iBAAI,CAACC,UAAL,GAAkB,EAAlB;AACAD,gBAAI,CAACE,OAAL,CAAa,UAAAC,OAAO,EAAI;AACtB,kBAAIC,CAAC,GAAGD,OAAO,CAACE,OAAR,CAAgBC,MAAhB,EAAR;AACAF,eAAC,CAAC,MAAD,CAAD,GAAYD,OAAO,CAACI,GAApB;;AACA,mBAAI,CAACN,UAAL,CAAgBO,IAAhB,CAAqBJ,CAArB;AACD,aAJD;AAKD,WARI,CAAP;AASD;AAED;;;;;;;+BAIMK,M,EAAgB;AACtB,eAAKd,aAAL,CAAmBe,cAAnB,GAAoCC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,MAAlB,CAApC;AACD;AAED;;;;;;;iCAISI,I,EAAc;AACrB,cAAIC,OAAO,CAAC,qCAAD,CAAX,EAAoD;AAClD,iBAAKnB,aAAL,CAAmBoB,YAAnB,CAAgCF,IAAhC;AACA,iBAAKjB,MAAL,CAAYoB,OAAZ,CAAoB,sBAApB,EAA4C,gBAA5C;AACD;AACF;;;;;;;uBAtCYtB,mB,EAAmB,uI,EAAA,yH;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,c;AAAA,a;AAAA,4S;AAAA;AAAA;ACfhC;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AAiBJ;;AACJ;;AACJ;;AACJ;;;;AApBoB;;AAAA;;;;;;;;;sEDQPA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTX,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEhBhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,oE,CAKA;;;QAUagC,e;;;AAEX,+BACStB,aADT,EAESC,MAFT,EAE8B;AAAA;;AADrB,aAAAD,aAAA,GAAAA,aAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACJ;;;;mCAEG;AACN,eAAKD,aAAL,CAAmBE,UAAnB;AACA,eAAKqB,SAAL;AACD,S,CAED;AACA;;;;iCACSC,U,EAAoB;AAC3B,cAAIA,UAAU,CAACC,KAAX,CAAiBP,IAAjB,IAAyB,IAA7B,EACE,KAAKlB,aAAL,CAAmB0B,YAAnB,CAAgCF,UAAU,CAACC,KAA3C,EADF,KAGE,KAAKzB,aAAL,CAAmB2B,YAAnB,CAAgCH,UAAU,CAACC,KAA3C;AAEF,eAAKF,SAAL,CAAeC,UAAf;AACA,eAAKvB,MAAL,CAAY2B,OAAZ,CAAoB,qBAApB,EAA2C,mBAA3C;AACD,S,CAED;;;;kCACUJ,U,EAAqB;AAC7B,cAAIA,UAAU,IAAI,IAAlB,EACEA,UAAU,CAACK,KAAX;AACF,eAAK7B,aAAL,CAAmBe,cAAnB,GAAoC,IAAI,qDAAJ,EAApC;AACD;;;;;;;uBA7BUO,e,EAAe,uI,EAAA,yH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,2lC;AAAA;AAAA;;;ACf5B;;AACI;;AACI;;AAAI;;AAAK;;AACT;;AAEA;;AAA2B;AAAA;;AAAA;;AAAA,mBAAY,IAAAQ,QAAA,KAAZ;AAAgC,WAAhC;;AAGvB;;AAAiD;AAAA;AAAA;;AAAjD;;AAEA;;AACI;;AACI;AAAA;AAAA;;AADJ;;AAEJ;;AAEA;;AACI;;AACI;AAAA;AAAA;;AADJ;;AAEJ;;AAEA;;AACI;;AACI;AAAA;AAAA;;AADJ;;AAEJ;;AAEA;;AACI;;AACI;AAAA;AAAA;;AADJ;;AAEJ;;AAEA;;AACI;;AACI;AAAA;AAAA;;AADJ;;AAEJ;;AAEA;;AACI;;AACI;AAAA;AAAA;;AADJ;;AAEJ;;AAEA;;AACI;;AACI;;AAAmC;;AACvC;;AACA;;AAA+C;AAAA;;AAAA;;AAAA,mBAAS,IAAAP,SAAA,KAAT;AAA8B,WAA9B;;AAC3C;;AAAgC;;AACpC;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA1C6D;;AAAA;;AAIzC;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;;;;sEDtBPD,e,EAAe;cAL3B,uDAK2B;eALjB;AACTlC,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEf5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOayC,gB;;;AAEX,kCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA,4Q;AAAA;AAAA;ACP7B;;AACI;;AACE;;AAEE;;AAEF;;AACA;;AACI;;AAEA;;AAEF;;AACJ;;AACF;;;;;;;;;sEDPWA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT3C,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;;QAAa0C,M;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,mF,CAKA;;;QAMaC,a;;;AAQX,6BAAoBxC,QAApB,EAAmD;AAAA;;AAA/B,aAAAA,QAAA,GAAAA,QAAA,CAA+B,CAHnD;;AACA,aAAAsB,cAAA,GAAyB,IAAI,qDAAJ,EAAzB;AAEsD,O,CACtD;;;;;qCACa;AACb,iBAAO,KAAKT,UAAL,GAAkB,KAAKb,QAAL,CAAcyC,IAAd,CAAmB,SAAnB,CAAzB;AACD,S,CAED;;;;qCACapB,M,EAAgB;AAC3B;AACA,eAAKR,UAAL,CAAgBO,IAAhB,CAAqB;AACnBsB,gBAAI,EAAErB,MAAM,CAACqB,IADM;AAEnBC,oBAAQ,EAAEtB,MAAM,CAACsB,QAFE;AAGnBC,eAAG,EAAEvB,MAAM,CAACuB,GAHO;AAInBC,qBAAS,EAAExB,MAAM,CAACwB,SAJC;AAKnBC,oBAAQ,EAAEzB,MAAM,CAACyB,QALE;AAMnBC,8BAAkB,EAAE1B,MAAM,CAAC0B;AANR,WAArB;AAQD,S,CAED;;;;qCACa1B,M,EAAgB;AAC3B;AACA,eAAKR,UAAL,CAAgBmC,MAAhB,CAAuB3B,MAAM,CAACI,IAA9B,EAAoC;AAClCiB,gBAAI,EAAErB,MAAM,CAACqB,IADqB;AAElCC,oBAAQ,EAAEtB,MAAM,CAACsB,QAFiB;AAGlCC,eAAG,EAAEvB,MAAM,CAACuB,GAHsB;AAIlCC,qBAAS,EAAExB,MAAM,CAACwB,SAJgB;AAKlCC,oBAAQ,EAAEzB,MAAM,CAACyB,QALiB;AAMlCC,8BAAkB,EAAE1B,MAAM,CAAC0B;AANO,WAApC;AAQD,S,CAED;;;;qCACatB,I,EAAc;AACzB,eAAKZ,UAAL,CAAgBoC,MAAhB,CAAuBxB,IAAvB;AACD;;;;;;;uBA3CYe,a,EAAa,kI;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACVU,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;ACX1B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzBpD,cAAQ,EAAE;AACRqD,cAAM,EAAE,yCADA;AAEVC,kBAAU,EAAE,+BAFF;AAGVC,mBAAW,EAAE,sCAHH;AAIVC,iBAAS,EAAE,eAJD;AAKVC,qBAAa,EAAE,2BALL;AAMVC,yBAAiB,EAAE,cANT;AAOVC,aAAK,EAAE,2CAPG;AAQVC,qBAAa,EAAE;AARL;AAFe,KAApB;AAcP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACzBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYR,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBS,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n \n}\n","<!-- menu navbar con un icono de bootstrap --> \r\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Angular_full_color_logo.svg/250px-Angular_full_color_logo.svg.png\" width=\"50md\" height=\"50md\" alt=\"logo\">\r\n<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n<span class=\"navbar-toggler-icon\"></span>\r\n</button>\r\n<div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n<div class=\"navbar-nav\">\r\n<a class=\"nav-item nav-link active\" href=\"#\">CRUD Firebase<span class=\"sr-only\">(current)</span></a>\r\n</div>\r\n</div>\r\n</nav>\r\n<app-alumnos></app-alumnos>","import { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AlumnosComponent } from './components/alumnos/alumnos.component';\nimport { AlumnoListComponent } from './components/alumnos/alumno-list/alumno-list.component';\nimport { AlumnoComponent } from './components/alumnos/alumno/alumno.component';\n\n// firebase\nimport { environment } from '../environments/environment';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\n//import { AngularFirestoreModule } from '@angular/fire/firestore';\n//import { AngularFireStorageModule } from '@angular/fire/storag\n\n// service\nimport { AlumnoService } from './services/alumno.service';\n// Toastr, para notificaciones en angular\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AlumnosComponent,\n    AlumnoListComponent,\n    AlumnoComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    ToastrModule.forRoot(),\n    BrowserAnimationsModule\n  ],\n  providers: [\n    AlumnoService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n// model\nimport { Alumno } from '../../../models/alumno';\n\n// service\nimport { AlumnoService } from '../../../services/alumno.service';\n\n// toastr\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-alumno-list',\n  templateUrl: './alumno-list.component.html',\n  styleUrls: ['./alumno-list.component.css']\n})\nexport class AlumnoListComponent implements OnInit {\n\n  // Arreglo para almacenar la informacion que se obtenga de la base de datos de firebase\n  alumnoList: Alumno[];\n  constructor(\n    private alumnoService: AlumnoService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    return this.alumnoService.getAlumnos()\n      .snapshotChanges().subscribe(item => {\n        this.alumnoList = [];\n        item.forEach(element => {\n          let x = element.payload.toJSON();\n          x[\"$key\"] = element.key;\n          this.alumnoList.push(x as Alumno);\n        });\n      });\n  }\n\n  /* \n   Recibe una varible de tipo 'Product' para invocar el servicio de firebase, para actualizarlo\n   Para no ocupar el doble enlace de datos ' [(ngModel)]' , se va utilizar 'Object.assign({}, product)'  \n  */\n onEdit(alumno: Alumno) {\n  this.alumnoService.selectedAlumno = Object.assign({}, alumno);\n}\n\n/* \n Recibe la llave '$key' para eliminar el registro, invocando el metodo 'deleteProduct' del servicio de firebase\n ademas muestra un 'warning' con toastr\n*/\nonDelete($key: string) {\n  if (confirm('Are you sure you want to delete it?')) {\n    this.alumnoService.deleteAlumno($key);\n    this.toastr.warning('Deleted Successfully', 'Alumno Removed');\n  }\n}\n\n}\n","\n<div class=\"card\">\n    <div class=\"card-body\">\n        <h6 class=\"text-center\">\n            Listado de Alumnos\n        </h6>\n        <table class=\"table table-bordered table-responsive\">\n            <tbody>\n                <tr *ngFor=\"let alumno of alumnoList\">\n                    <td>{{alumno.$key}}</td>\n                    <td>{{alumno.name}}</td>            \n                    <td>{{alumno.lastname}}</td>\n                    <td>{{alumno.age}}</td>\n                    <td>{{alumno.direccion}}</td>\n                    <td>{{alumno.telefono}}</td>\n                    <td>{{alumno.correo_electronico}}</td>\n                    <td>\n                        <a class=\"btn btn-secondary text-white\" (click)=\"onEdit(alumno)\">\n                            <i class=\"far fa-edit\"></i>\n                        </a>\n                        <a class=\"btn btn-danger text-white\" (click)=\"onDelete(alumno.$key)\">\n                            <i class=\"fas fa-trash-alt\"></i>\n                        </a>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n//  Service \nimport { AlumnoService } from '../../../services/alumno.service';\n// Class\nimport { Alumno } from '../../../models/alumno';\n// toastr\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-alumno',\n  templateUrl: './alumno.component.html',\n  styleUrls: ['./alumno.component.css']\n})\nexport class AlumnoComponent implements OnInit {\n\n  constructor(\n    public alumnoService: AlumnoService,\n    public toastr: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.alumnoService.getAlumnos();\n    this.resetForm();\n  }\n\n  // Recibe un formulario del tipo NgForm, lo envia a guardar o actualizar , invocando el servicio Firebase\n  // lo termina limpiando resetForm\n  onSubmit(alumnoForm: NgForm) {\n    if (alumnoForm.value.$key == null)\n      this.alumnoService.insertAlumno(alumnoForm.value);\n    else\n      this.alumnoService.updateAlumno(alumnoForm.value);\n\n    this.resetForm(alumnoForm);\n    this.toastr.success('Sucessful Operation', 'Alumno Registered');\n  }\n\n  // Para limpiar el formulario\n  resetForm(alumnoForm?: NgForm) {\n    if (alumnoForm != null)\n      alumnoForm.reset();\n    this.alumnoService.selectedAlumno = new Alumno();\n  }\n\n\n}\n","<div class=\"card mt-5\">\n    <div class=\"card-body\">\n        <h2>Datos</h2>\n        <br>\n        <!-- Cuando el evento onSubmit , suceda se va pasar todo el formulario 'productForm' -->\n        <form #alumnoForm=\"ngForm\" (ngSubmit)=\"onSubmit(alumnoForm)\">\n\n            <!-- TO UPDATE -->\n            <input type=\"hidden\" name=\"$key\" #$key=\"ngModel\" [(ngModel)]=\"alumnoService.selectedAlumno.$key\">\n\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" name=\"name\" #name=\"ngModel\"\n                    [(ngModel)]=\"alumnoService.selectedAlumno.name\" placeholder=\"Agregar Nombre\">\n            </div>\n\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" name=\"lastname\" #name=\"ngModel\"\n                    [(ngModel)]=\"alumnoService.selectedAlumno.lastname\" placeholder=\"Agregar Apellido\">\n            </div>\n\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" name=\"age\" #name=\"ngModel\"\n                    [(ngModel)]=\"alumnoService.selectedAlumno.age\" placeholder=\"Agregar Edad\">\n            </div>\n\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" name=\"direccion\" #name=\"ngModel\"\n                    [(ngModel)]=\"alumnoService.selectedAlumno.direccion\" placeholder=\"Agregar Direccion\">\n            </div>\n\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" name=\"telefono\" #name=\"ngModel\"\n                    [(ngModel)]=\"alumnoService.selectedAlumno.telefono\" placeholder=\"Agregar Telefono\">\n            </div>\n\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" name=\"correo_electronico\" #name=\"ngModel\"\n                    [(ngModel)]=\"alumnoService.selectedAlumno.correo_electronico\" placeholder=\"Agregar Mail\">\n            </div>\n            \n            <div class=\"form-group\">\n                <button class=\"btn btn-primary\" type=\"submit\">\n                    <i class=\"fas fa-plus-circle\"></i> Agregar Alumno\n                </button>\n                <button class=\"btn btn-secondary\" type=\"reset\" (click)=\"resetForm(alumnoForm)\">\n                    <i class=\"fas fa-sync-alt\"></i> Limpiar\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-alumnos',\n  templateUrl: './alumnos.component.html',\n  styleUrls: ['./alumnos.component.css']\n})\nexport class AlumnosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-5\">\n  \n        <app-alumno></app-alumno>\n  \n      </div>\n      <div class=\"col-md-7 text-center\">\n          <img width=\"300\" alt=\"Angular Logo\" src=\"https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_502,h_518/https://keytotech.com/wp-content/uploads/2019/05/firebase.png\">\n          \n          <app-alumno-list></app-alumno-list>\n          \n        </div>\n    </div>\n  </div>\n","export class Alumno {\n        $key: string;\n        name: string;\n        lastname: string;\n        age: string;\n        direccion: string;\n        telefono: string;\n        correo_electronico: string;\n}\n","import { Injectable } from '@angular/core';\n\n// Firebase\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\n\n// Model\nimport { Alumno } from '../models/alumno';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlumnoService {\n\n  // Traer los datos de firebase\n  alumnoList: AngularFireList<any>;\n\n  // Una variable temporal, para guardar los datos seleccionados, del tipo Product\n  selectedAlumno: Alumno = new Alumno();\n\n  constructor(private firebase: AngularFireDatabase) { }\n  // Traer todos los productos desde firebase \n  getAlumnos() { // guarda los elementos en la varible 'products'\n  return this.alumnoList = this.firebase.list('alumnos');\n}\n\n// crear un nuevo producto  , recibiendo un parametro de tipo Product\ninsertAlumno(alumno: Alumno) {\n  // agregar un dato al final de la lista, como recibe un objeto del tipo Product , puede acceder a sus propiedades\n  this.alumnoList.push({\n    name: alumno.name,\n    lastname: alumno.lastname,\n    age: alumno.age,\n    direccion: alumno.direccion,\n    telefono: alumno.telefono,\n    correo_electronico: alumno.correo_electronico\n  });\n}\n\n// Actualiza un producto, recibiendo un parametro de tipo Product\nupdateAlumno(alumno: Alumno) {\n  // Utilizando el metodo update de firebase , se envia clave y los parametros que va actualizar \n  this.alumnoList.update(alumno.$key, {\n    name: alumno.name,\n    lastname: alumno.lastname,\n    age: alumno.age,\n    direccion: alumno.direccion,\n    telefono: alumno.telefono,\n    correo_electronico: alumno.correo_electronico\n  });\n}\n\n// Elimina un producto, recibiendo como parametro la clave , utilizando el metodo remove de firebase\ndeleteAlumno($key: string) {\n  this.alumnoList.remove($key);\n}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDFnhU06tM_QlJDDa_jENpRZfIhDfSketo\",\n  authDomain: \"alumnos-reyes.firebaseapp.com\",\n  databaseURL: \"https://alumnos-reyes.firebaseio.com\",\n  projectId: \"alumnos-reyes\",\n  storageBucket: \"alumnos-reyes.appspot.com\",\n  messagingSenderId: \"642568478111\",\n  appId: \"1:642568478111:web:795dd103fa6996fe2171aa\",\n  measurementId: \"G-9DSCZ784X4\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}